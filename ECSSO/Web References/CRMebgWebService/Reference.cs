//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:4.0.30319.42000
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 原始程式碼已由 Microsoft.VSDesigner 自動產生，版本 4.0.30319.42000。
// 
#pragma warning disable 1591

namespace ECSSO.CRMebgWebService {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="EbgCrmWebServiceApiSoap", Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConditionStatement[]))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(object[]))]
    public partial class EbgCrmWebServiceApi : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback CrmAuthenticationOperationCompleted;
        
        private System.Threading.SendOrPostCallback CrmAuthenticationExOperationCompleted;
        
        private System.Threading.SendOrPostCallback CrmSecureAuthenticationOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryTableHeaderOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryTableRecordsOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryRelatedTableRecordsOperationCompleted;
        
        private System.Threading.SendOrPostCallback QuerySingleRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryTableSearchHintOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateMultipleRecordsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback TriggerWorkflowOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadImageOperationCompleted;
        
        private System.Threading.SendOrPostCallback DownloadImageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInformationContentOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetRecordStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddListMembersOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveListMembersOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryPicklistOptionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetRecordsRelationOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveRecordsRelationOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveMultipleRecordsOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public EbgCrmWebServiceApi() {
            this.Url = global::ECSSO.Properties.Settings.Default.ECSSO_CRMebgWebService_EbgCrmWebServiceApi;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event CrmAuthenticationCompletedEventHandler CrmAuthenticationCompleted;
        
        /// <remarks/>
        public event CrmAuthenticationExCompletedEventHandler CrmAuthenticationExCompleted;
        
        /// <remarks/>
        public event CrmSecureAuthenticationCompletedEventHandler CrmSecureAuthenticationCompleted;
        
        /// <remarks/>
        public event QueryTableHeaderCompletedEventHandler QueryTableHeaderCompleted;
        
        /// <remarks/>
        public event QueryTableRecordsCompletedEventHandler QueryTableRecordsCompleted;
        
        /// <remarks/>
        public event QueryRelatedTableRecordsCompletedEventHandler QueryRelatedTableRecordsCompleted;
        
        /// <remarks/>
        public event QuerySingleRecordCompletedEventHandler QuerySingleRecordCompleted;
        
        /// <remarks/>
        public event QueryTableSearchHintCompletedEventHandler QueryTableSearchHintCompleted;
        
        /// <remarks/>
        public event UpdateRecordCompletedEventHandler UpdateRecordCompleted;
        
        /// <remarks/>
        public event CreateRecordCompletedEventHandler CreateRecordCompleted;
        
        /// <remarks/>
        public event CreateMultipleRecordsCompletedEventHandler CreateMultipleRecordsCompleted;
        
        /// <remarks/>
        public event DeleteRecordCompletedEventHandler DeleteRecordCompleted;
        
        /// <remarks/>
        public event TriggerWorkflowCompletedEventHandler TriggerWorkflowCompleted;
        
        /// <remarks/>
        public event UploadImageCompletedEventHandler UploadImageCompleted;
        
        /// <remarks/>
        public event DownloadImageCompletedEventHandler DownloadImageCompleted;
        
        /// <remarks/>
        public event GetInformationContentCompletedEventHandler GetInformationContentCompleted;
        
        /// <remarks/>
        public event SetRecordStatusCompletedEventHandler SetRecordStatusCompleted;
        
        /// <remarks/>
        public event AddListMembersCompletedEventHandler AddListMembersCompleted;
        
        /// <remarks/>
        public event RemoveListMembersCompletedEventHandler RemoveListMembersCompleted;
        
        /// <remarks/>
        public event QueryPicklistOptionsCompletedEventHandler QueryPicklistOptionsCompleted;
        
        /// <remarks/>
        public event SetRecordsRelationCompletedEventHandler SetRecordsRelationCompleted;
        
        /// <remarks/>
        public event RemoveRecordsRelationCompletedEventHandler RemoveRecordsRelationCompleted;
        
        /// <remarks/>
        public event RetrieveMultipleRecordsCompletedEventHandler RetrieveMultipleRecordsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CrmAuthentication", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result CrmAuthentication(string id, string password, string organization) {
            object[] results = this.Invoke("CrmAuthentication", new object[] {
                        id,
                        password,
                        organization});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void CrmAuthenticationAsync(string id, string password, string organization) {
            this.CrmAuthenticationAsync(id, password, organization, null);
        }
        
        /// <remarks/>
        public void CrmAuthenticationAsync(string id, string password, string organization, object userState) {
            if ((this.CrmAuthenticationOperationCompleted == null)) {
                this.CrmAuthenticationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCrmAuthenticationOperationCompleted);
            }
            this.InvokeAsync("CrmAuthentication", new object[] {
                        id,
                        password,
                        organization}, this.CrmAuthenticationOperationCompleted, userState);
        }
        
        private void OnCrmAuthenticationOperationCompleted(object arg) {
            if ((this.CrmAuthenticationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CrmAuthenticationCompleted(this, new CrmAuthenticationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CrmAuthenticationEx", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result CrmAuthenticationEx(string id, string password) {
            object[] results = this.Invoke("CrmAuthenticationEx", new object[] {
                        id,
                        password});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void CrmAuthenticationExAsync(string id, string password) {
            this.CrmAuthenticationExAsync(id, password, null);
        }
        
        /// <remarks/>
        public void CrmAuthenticationExAsync(string id, string password, object userState) {
            if ((this.CrmAuthenticationExOperationCompleted == null)) {
                this.CrmAuthenticationExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCrmAuthenticationExOperationCompleted);
            }
            this.InvokeAsync("CrmAuthenticationEx", new object[] {
                        id,
                        password}, this.CrmAuthenticationExOperationCompleted, userState);
        }
        
        private void OnCrmAuthenticationExOperationCompleted(object arg) {
            if ((this.CrmAuthenticationExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CrmAuthenticationExCompleted(this, new CrmAuthenticationExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CrmSecureAuthentication", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result CrmSecureAuthentication(string id, string password) {
            object[] results = this.Invoke("CrmSecureAuthentication", new object[] {
                        id,
                        password});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void CrmSecureAuthenticationAsync(string id, string password) {
            this.CrmSecureAuthenticationAsync(id, password, null);
        }
        
        /// <remarks/>
        public void CrmSecureAuthenticationAsync(string id, string password, object userState) {
            if ((this.CrmSecureAuthenticationOperationCompleted == null)) {
                this.CrmSecureAuthenticationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCrmSecureAuthenticationOperationCompleted);
            }
            this.InvokeAsync("CrmSecureAuthentication", new object[] {
                        id,
                        password}, this.CrmSecureAuthenticationOperationCompleted, userState);
        }
        
        private void OnCrmSecureAuthenticationOperationCompleted(object arg) {
            if ((this.CrmSecureAuthenticationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CrmSecureAuthenticationCompleted(this, new CrmSecureAuthenticationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryTableHeader", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode QueryTableHeader(string key) {
            object[] results = this.Invoke("QueryTableHeader", new object[] {
                        key});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void QueryTableHeaderAsync(string key) {
            this.QueryTableHeaderAsync(key, null);
        }
        
        /// <remarks/>
        public void QueryTableHeaderAsync(string key, object userState) {
            if ((this.QueryTableHeaderOperationCompleted == null)) {
                this.QueryTableHeaderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryTableHeaderOperationCompleted);
            }
            this.InvokeAsync("QueryTableHeader", new object[] {
                        key}, this.QueryTableHeaderOperationCompleted, userState);
        }
        
        private void OnQueryTableHeaderOperationCompleted(object arg) {
            if ((this.QueryTableHeaderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryTableHeaderCompleted(this, new QueryTableHeaderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryTableRecords", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode QueryTableRecords(string key, string searchValue, int pageNumber, int pageCount) {
            object[] results = this.Invoke("QueryTableRecords", new object[] {
                        key,
                        searchValue,
                        pageNumber,
                        pageCount});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void QueryTableRecordsAsync(string key, string searchValue, int pageNumber, int pageCount) {
            this.QueryTableRecordsAsync(key, searchValue, pageNumber, pageCount, null);
        }
        
        /// <remarks/>
        public void QueryTableRecordsAsync(string key, string searchValue, int pageNumber, int pageCount, object userState) {
            if ((this.QueryTableRecordsOperationCompleted == null)) {
                this.QueryTableRecordsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryTableRecordsOperationCompleted);
            }
            this.InvokeAsync("QueryTableRecords", new object[] {
                        key,
                        searchValue,
                        pageNumber,
                        pageCount}, this.QueryTableRecordsOperationCompleted, userState);
        }
        
        private void OnQueryTableRecordsOperationCompleted(object arg) {
            if ((this.QueryTableRecordsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryTableRecordsCompleted(this, new QueryTableRecordsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryRelatedTableRecords", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode QueryRelatedTableRecords(string key, System.Guid recordGuid, int pageNumber, int pageCount) {
            object[] results = this.Invoke("QueryRelatedTableRecords", new object[] {
                        key,
                        recordGuid,
                        pageNumber,
                        pageCount});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void QueryRelatedTableRecordsAsync(string key, System.Guid recordGuid, int pageNumber, int pageCount) {
            this.QueryRelatedTableRecordsAsync(key, recordGuid, pageNumber, pageCount, null);
        }
        
        /// <remarks/>
        public void QueryRelatedTableRecordsAsync(string key, System.Guid recordGuid, int pageNumber, int pageCount, object userState) {
            if ((this.QueryRelatedTableRecordsOperationCompleted == null)) {
                this.QueryRelatedTableRecordsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryRelatedTableRecordsOperationCompleted);
            }
            this.InvokeAsync("QueryRelatedTableRecords", new object[] {
                        key,
                        recordGuid,
                        pageNumber,
                        pageCount}, this.QueryRelatedTableRecordsOperationCompleted, userState);
        }
        
        private void OnQueryRelatedTableRecordsOperationCompleted(object arg) {
            if ((this.QueryRelatedTableRecordsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryRelatedTableRecordsCompleted(this, new QueryRelatedTableRecordsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QuerySingleRecord", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode QuerySingleRecord(string entityName, System.Guid recordGuid) {
            object[] results = this.Invoke("QuerySingleRecord", new object[] {
                        entityName,
                        recordGuid});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void QuerySingleRecordAsync(string entityName, System.Guid recordGuid) {
            this.QuerySingleRecordAsync(entityName, recordGuid, null);
        }
        
        /// <remarks/>
        public void QuerySingleRecordAsync(string entityName, System.Guid recordGuid, object userState) {
            if ((this.QuerySingleRecordOperationCompleted == null)) {
                this.QuerySingleRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQuerySingleRecordOperationCompleted);
            }
            this.InvokeAsync("QuerySingleRecord", new object[] {
                        entityName,
                        recordGuid}, this.QuerySingleRecordOperationCompleted, userState);
        }
        
        private void OnQuerySingleRecordOperationCompleted(object arg) {
            if ((this.QuerySingleRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QuerySingleRecordCompleted(this, new QuerySingleRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryTableSearchHint", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result QueryTableSearchHint(string key) {
            object[] results = this.Invoke("QueryTableSearchHint", new object[] {
                        key});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void QueryTableSearchHintAsync(string key) {
            this.QueryTableSearchHintAsync(key, null);
        }
        
        /// <remarks/>
        public void QueryTableSearchHintAsync(string key, object userState) {
            if ((this.QueryTableSearchHintOperationCompleted == null)) {
                this.QueryTableSearchHintOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryTableSearchHintOperationCompleted);
            }
            this.InvokeAsync("QueryTableSearchHint", new object[] {
                        key}, this.QueryTableSearchHintOperationCompleted, userState);
        }
        
        private void OnQueryTableSearchHintOperationCompleted(object arg) {
            if ((this.QueryTableSearchHintCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryTableSearchHintCompleted(this, new QueryTableSearchHintCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateRecord", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result UpdateRecord(string entityName, System.Guid recordGuid, System.Xml.XmlNode attributes) {
            object[] results = this.Invoke("UpdateRecord", new object[] {
                        entityName,
                        recordGuid,
                        attributes});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateRecordAsync(string entityName, System.Guid recordGuid, System.Xml.XmlNode attributes) {
            this.UpdateRecordAsync(entityName, recordGuid, attributes, null);
        }
        
        /// <remarks/>
        public void UpdateRecordAsync(string entityName, System.Guid recordGuid, System.Xml.XmlNode attributes, object userState) {
            if ((this.UpdateRecordOperationCompleted == null)) {
                this.UpdateRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateRecordOperationCompleted);
            }
            this.InvokeAsync("UpdateRecord", new object[] {
                        entityName,
                        recordGuid,
                        attributes}, this.UpdateRecordOperationCompleted, userState);
        }
        
        private void OnUpdateRecordOperationCompleted(object arg) {
            if ((this.UpdateRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateRecordCompleted(this, new UpdateRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateRecord", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result CreateRecord(string entityName, System.Xml.XmlNode attributes) {
            object[] results = this.Invoke("CreateRecord", new object[] {
                        entityName,
                        attributes});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void CreateRecordAsync(string entityName, System.Xml.XmlNode attributes) {
            this.CreateRecordAsync(entityName, attributes, null);
        }
        
        /// <remarks/>
        public void CreateRecordAsync(string entityName, System.Xml.XmlNode attributes, object userState) {
            if ((this.CreateRecordOperationCompleted == null)) {
                this.CreateRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateRecordOperationCompleted);
            }
            this.InvokeAsync("CreateRecord", new object[] {
                        entityName,
                        attributes}, this.CreateRecordOperationCompleted, userState);
        }
        
        private void OnCreateRecordOperationCompleted(object arg) {
            if ((this.CreateRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateRecordCompleted(this, new CreateRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateMultipleRecords", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public Result[] CreateMultipleRecords(string entityName, System.Xml.XmlNode attributes) {
            object[] results = this.Invoke("CreateMultipleRecords", new object[] {
                        entityName,
                        attributes});
            return ((Result[])(results[0]));
        }
        
        /// <remarks/>
        public void CreateMultipleRecordsAsync(string entityName, System.Xml.XmlNode attributes) {
            this.CreateMultipleRecordsAsync(entityName, attributes, null);
        }
        
        /// <remarks/>
        public void CreateMultipleRecordsAsync(string entityName, System.Xml.XmlNode attributes, object userState) {
            if ((this.CreateMultipleRecordsOperationCompleted == null)) {
                this.CreateMultipleRecordsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateMultipleRecordsOperationCompleted);
            }
            this.InvokeAsync("CreateMultipleRecords", new object[] {
                        entityName,
                        attributes}, this.CreateMultipleRecordsOperationCompleted, userState);
        }
        
        private void OnCreateMultipleRecordsOperationCompleted(object arg) {
            if ((this.CreateMultipleRecordsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateMultipleRecordsCompleted(this, new CreateMultipleRecordsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteRecord", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result DeleteRecord(string entityName, System.Guid recordGuid) {
            object[] results = this.Invoke("DeleteRecord", new object[] {
                        entityName,
                        recordGuid});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteRecordAsync(string entityName, System.Guid recordGuid) {
            this.DeleteRecordAsync(entityName, recordGuid, null);
        }
        
        /// <remarks/>
        public void DeleteRecordAsync(string entityName, System.Guid recordGuid, object userState) {
            if ((this.DeleteRecordOperationCompleted == null)) {
                this.DeleteRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteRecordOperationCompleted);
            }
            this.InvokeAsync("DeleteRecord", new object[] {
                        entityName,
                        recordGuid}, this.DeleteRecordOperationCompleted, userState);
        }
        
        private void OnDeleteRecordOperationCompleted(object arg) {
            if ((this.DeleteRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteRecordCompleted(this, new DeleteRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TriggerWorkflow", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result TriggerWorkflow(System.Guid workflowGuid, System.Guid recordGuid) {
            object[] results = this.Invoke("TriggerWorkflow", new object[] {
                        workflowGuid,
                        recordGuid});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void TriggerWorkflowAsync(System.Guid workflowGuid, System.Guid recordGuid) {
            this.TriggerWorkflowAsync(workflowGuid, recordGuid, null);
        }
        
        /// <remarks/>
        public void TriggerWorkflowAsync(System.Guid workflowGuid, System.Guid recordGuid, object userState) {
            if ((this.TriggerWorkflowOperationCompleted == null)) {
                this.TriggerWorkflowOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTriggerWorkflowOperationCompleted);
            }
            this.InvokeAsync("TriggerWorkflow", new object[] {
                        workflowGuid,
                        recordGuid}, this.TriggerWorkflowOperationCompleted, userState);
        }
        
        private void OnTriggerWorkflowOperationCompleted(object arg) {
            if ((this.TriggerWorkflowCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TriggerWorkflowCompleted(this, new TriggerWorkflowCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadImage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result UploadImage([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] fileContent, string fileName, string entityName, System.Guid recordGuid) {
            object[] results = this.Invoke("UploadImage", new object[] {
                        fileContent,
                        fileName,
                        entityName,
                        recordGuid});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void UploadImageAsync(byte[] fileContent, string fileName, string entityName, System.Guid recordGuid) {
            this.UploadImageAsync(fileContent, fileName, entityName, recordGuid, null);
        }
        
        /// <remarks/>
        public void UploadImageAsync(byte[] fileContent, string fileName, string entityName, System.Guid recordGuid, object userState) {
            if ((this.UploadImageOperationCompleted == null)) {
                this.UploadImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadImageOperationCompleted);
            }
            this.InvokeAsync("UploadImage", new object[] {
                        fileContent,
                        fileName,
                        entityName,
                        recordGuid}, this.UploadImageOperationCompleted, userState);
        }
        
        private void OnUploadImageOperationCompleted(object arg) {
            if ((this.UploadImageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadImageCompleted(this, new UploadImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DownloadImage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result DownloadImage(System.Guid recordGuid, string fileName, int height, int width) {
            object[] results = this.Invoke("DownloadImage", new object[] {
                        recordGuid,
                        fileName,
                        height,
                        width});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void DownloadImageAsync(System.Guid recordGuid, string fileName, int height, int width) {
            this.DownloadImageAsync(recordGuid, fileName, height, width, null);
        }
        
        /// <remarks/>
        public void DownloadImageAsync(System.Guid recordGuid, string fileName, int height, int width, object userState) {
            if ((this.DownloadImageOperationCompleted == null)) {
                this.DownloadImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDownloadImageOperationCompleted);
            }
            this.InvokeAsync("DownloadImage", new object[] {
                        recordGuid,
                        fileName,
                        height,
                        width}, this.DownloadImageOperationCompleted, userState);
        }
        
        private void OnDownloadImageOperationCompleted(object arg) {
            if ((this.DownloadImageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DownloadImageCompleted(this, new DownloadImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInformationContent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result GetInformationContent(string key) {
            object[] results = this.Invoke("GetInformationContent", new object[] {
                        key});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void GetInformationContentAsync(string key) {
            this.GetInformationContentAsync(key, null);
        }
        
        /// <remarks/>
        public void GetInformationContentAsync(string key, object userState) {
            if ((this.GetInformationContentOperationCompleted == null)) {
                this.GetInformationContentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInformationContentOperationCompleted);
            }
            this.InvokeAsync("GetInformationContent", new object[] {
                        key}, this.GetInformationContentOperationCompleted, userState);
        }
        
        private void OnGetInformationContentOperationCompleted(object arg) {
            if ((this.GetInformationContentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInformationContentCompleted(this, new GetInformationContentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetRecordStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result SetRecordStatus(string entityName, System.Guid recordGuid, string state, int status) {
            object[] results = this.Invoke("SetRecordStatus", new object[] {
                        entityName,
                        recordGuid,
                        state,
                        status});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void SetRecordStatusAsync(string entityName, System.Guid recordGuid, string state, int status) {
            this.SetRecordStatusAsync(entityName, recordGuid, state, status, null);
        }
        
        /// <remarks/>
        public void SetRecordStatusAsync(string entityName, System.Guid recordGuid, string state, int status, object userState) {
            if ((this.SetRecordStatusOperationCompleted == null)) {
                this.SetRecordStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetRecordStatusOperationCompleted);
            }
            this.InvokeAsync("SetRecordStatus", new object[] {
                        entityName,
                        recordGuid,
                        state,
                        status}, this.SetRecordStatusOperationCompleted, userState);
        }
        
        private void OnSetRecordStatusOperationCompleted(object arg) {
            if ((this.SetRecordStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetRecordStatusCompleted(this, new SetRecordStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddListMembers", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result AddListMembers(System.Guid listGuid, System.Guid[] memberGuidArr) {
            object[] results = this.Invoke("AddListMembers", new object[] {
                        listGuid,
                        memberGuidArr});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void AddListMembersAsync(System.Guid listGuid, System.Guid[] memberGuidArr) {
            this.AddListMembersAsync(listGuid, memberGuidArr, null);
        }
        
        /// <remarks/>
        public void AddListMembersAsync(System.Guid listGuid, System.Guid[] memberGuidArr, object userState) {
            if ((this.AddListMembersOperationCompleted == null)) {
                this.AddListMembersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddListMembersOperationCompleted);
            }
            this.InvokeAsync("AddListMembers", new object[] {
                        listGuid,
                        memberGuidArr}, this.AddListMembersOperationCompleted, userState);
        }
        
        private void OnAddListMembersOperationCompleted(object arg) {
            if ((this.AddListMembersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddListMembersCompleted(this, new AddListMembersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RemoveListMembers", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result RemoveListMembers(System.Guid listGuid, System.Guid[] memberGuidArr) {
            object[] results = this.Invoke("RemoveListMembers", new object[] {
                        listGuid,
                        memberGuidArr});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveListMembersAsync(System.Guid listGuid, System.Guid[] memberGuidArr) {
            this.RemoveListMembersAsync(listGuid, memberGuidArr, null);
        }
        
        /// <remarks/>
        public void RemoveListMembersAsync(System.Guid listGuid, System.Guid[] memberGuidArr, object userState) {
            if ((this.RemoveListMembersOperationCompleted == null)) {
                this.RemoveListMembersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveListMembersOperationCompleted);
            }
            this.InvokeAsync("RemoveListMembers", new object[] {
                        listGuid,
                        memberGuidArr}, this.RemoveListMembersOperationCompleted, userState);
        }
        
        private void OnRemoveListMembersOperationCompleted(object arg) {
            if ((this.RemoveListMembersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveListMembersCompleted(this, new RemoveListMembersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryPicklistOptions", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode QueryPicklistOptions(string entityName, string picklistName) {
            object[] results = this.Invoke("QueryPicklistOptions", new object[] {
                        entityName,
                        picklistName});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void QueryPicklistOptionsAsync(string entityName, string picklistName) {
            this.QueryPicklistOptionsAsync(entityName, picklistName, null);
        }
        
        /// <remarks/>
        public void QueryPicklistOptionsAsync(string entityName, string picklistName, object userState) {
            if ((this.QueryPicklistOptionsOperationCompleted == null)) {
                this.QueryPicklistOptionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryPicklistOptionsOperationCompleted);
            }
            this.InvokeAsync("QueryPicklistOptions", new object[] {
                        entityName,
                        picklistName}, this.QueryPicklistOptionsOperationCompleted, userState);
        }
        
        private void OnQueryPicklistOptionsOperationCompleted(object arg) {
            if ((this.QueryPicklistOptionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryPicklistOptionsCompleted(this, new QueryPicklistOptionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetRecordsRelation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result SetRecordsRelation(string key, System.Guid primaryRecordGuid, System.Guid[] relatedRecordGuidArr) {
            object[] results = this.Invoke("SetRecordsRelation", new object[] {
                        key,
                        primaryRecordGuid,
                        relatedRecordGuidArr});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void SetRecordsRelationAsync(string key, System.Guid primaryRecordGuid, System.Guid[] relatedRecordGuidArr) {
            this.SetRecordsRelationAsync(key, primaryRecordGuid, relatedRecordGuidArr, null);
        }
        
        /// <remarks/>
        public void SetRecordsRelationAsync(string key, System.Guid primaryRecordGuid, System.Guid[] relatedRecordGuidArr, object userState) {
            if ((this.SetRecordsRelationOperationCompleted == null)) {
                this.SetRecordsRelationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetRecordsRelationOperationCompleted);
            }
            this.InvokeAsync("SetRecordsRelation", new object[] {
                        key,
                        primaryRecordGuid,
                        relatedRecordGuidArr}, this.SetRecordsRelationOperationCompleted, userState);
        }
        
        private void OnSetRecordsRelationOperationCompleted(object arg) {
            if ((this.SetRecordsRelationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetRecordsRelationCompleted(this, new SetRecordsRelationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RemoveRecordsRelation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result RemoveRecordsRelation(string key, System.Guid primaryRecordGuid, System.Guid[] relatedRecordGuidArr) {
            object[] results = this.Invoke("RemoveRecordsRelation", new object[] {
                        key,
                        primaryRecordGuid,
                        relatedRecordGuidArr});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveRecordsRelationAsync(string key, System.Guid primaryRecordGuid, System.Guid[] relatedRecordGuidArr) {
            this.RemoveRecordsRelationAsync(key, primaryRecordGuid, relatedRecordGuidArr, null);
        }
        
        /// <remarks/>
        public void RemoveRecordsRelationAsync(string key, System.Guid primaryRecordGuid, System.Guid[] relatedRecordGuidArr, object userState) {
            if ((this.RemoveRecordsRelationOperationCompleted == null)) {
                this.RemoveRecordsRelationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveRecordsRelationOperationCompleted);
            }
            this.InvokeAsync("RemoveRecordsRelation", new object[] {
                        key,
                        primaryRecordGuid,
                        relatedRecordGuidArr}, this.RemoveRecordsRelationOperationCompleted, userState);
        }
        
        private void OnRemoveRecordsRelationOperationCompleted(object arg) {
            if ((this.RemoveRecordsRelationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveRecordsRelationCompleted(this, new RemoveRecordsRelationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveMultipleRecords", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode RetrieveMultipleRecords(string entityName, string[] attributes, FilterStatement queryFilters, int pageNumber, int pageCount) {
            object[] results = this.Invoke("RetrieveMultipleRecords", new object[] {
                        entityName,
                        attributes,
                        queryFilters,
                        pageNumber,
                        pageCount});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveMultipleRecordsAsync(string entityName, string[] attributes, FilterStatement queryFilters, int pageNumber, int pageCount) {
            this.RetrieveMultipleRecordsAsync(entityName, attributes, queryFilters, pageNumber, pageCount, null);
        }
        
        /// <remarks/>
        public void RetrieveMultipleRecordsAsync(string entityName, string[] attributes, FilterStatement queryFilters, int pageNumber, int pageCount, object userState) {
            if ((this.RetrieveMultipleRecordsOperationCompleted == null)) {
                this.RetrieveMultipleRecordsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveMultipleRecordsOperationCompleted);
            }
            this.InvokeAsync("RetrieveMultipleRecords", new object[] {
                        entityName,
                        attributes,
                        queryFilters,
                        pageNumber,
                        pageCount}, this.RetrieveMultipleRecordsOperationCompleted, userState);
        }
        
        private void OnRetrieveMultipleRecordsOperationCompleted(object arg) {
            if ((this.RetrieveMultipleRecordsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveMultipleRecordsCompleted(this, new RetrieveMultipleRecordsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Result {
        
        private bool successField;
        
        private string[] descriptionsField;
        
        /// <remarks/>
        public bool success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
            }
        }
        
        /// <remarks/>
        public string[] descriptions {
            get {
                return this.descriptionsField;
            }
            set {
                this.descriptionsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ConditionStatement {
        
        private string attributeNameField;
        
        private object[] valuesField;
        
        private ConditionOperatorEnum operatorField;
        
        /// <remarks/>
        public string attributeName {
            get {
                return this.attributeNameField;
            }
            set {
                this.attributeNameField = value;
            }
        }
        
        /// <remarks/>
        public object[] values {
            get {
                return this.valuesField;
            }
            set {
                this.valuesField = value;
            }
        }
        
        /// <remarks/>
        public ConditionOperatorEnum Operator {
            get {
                return this.operatorField;
            }
            set {
                this.operatorField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum ConditionOperatorEnum {
        
        /// <remarks/>
        Between,
        
        /// <remarks/>
        NotBetween,
        
        /// <remarks/>
        Equal,
        
        /// <remarks/>
        NotEqual,
        
        /// <remarks/>
        GreaterEqual,
        
        /// <remarks/>
        GreaterThan,
        
        /// <remarks/>
        In,
        
        /// <remarks/>
        NotIn,
        
        /// <remarks/>
        LessEqual,
        
        /// <remarks/>
        LessThan,
        
        /// <remarks/>
        Like,
        
        /// <remarks/>
        NotLike,
        
        /// <remarks/>
        Null,
        
        /// <remarks/>
        NotNull,
        
        /// <remarks/>
        On,
        
        /// <remarks/>
        NotOn,
        
        /// <remarks/>
        OnOrAfter,
        
        /// <remarks/>
        OnOrBefore,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class FilterStatement {
        
        private ConditionStatement[] conditionsField;
        
        private FilterStatement[] filtersField;
        
        private FilterOperatorEnum operatorField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public ConditionStatement[] conditions {
            get {
                return this.conditionsField;
            }
            set {
                this.conditionsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public FilterStatement[] filters {
            get {
                return this.filtersField;
            }
            set {
                this.filtersField = value;
            }
        }
        
        /// <remarks/>
        public FilterOperatorEnum Operator {
            get {
                return this.operatorField;
            }
            set {
                this.operatorField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum FilterOperatorEnum {
        
        /// <remarks/>
        And,
        
        /// <remarks/>
        Or,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void CrmAuthenticationCompletedEventHandler(object sender, CrmAuthenticationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CrmAuthenticationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CrmAuthenticationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void CrmAuthenticationExCompletedEventHandler(object sender, CrmAuthenticationExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CrmAuthenticationExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CrmAuthenticationExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void CrmSecureAuthenticationCompletedEventHandler(object sender, CrmSecureAuthenticationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CrmSecureAuthenticationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CrmSecureAuthenticationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void QueryTableHeaderCompletedEventHandler(object sender, QueryTableHeaderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryTableHeaderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryTableHeaderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void QueryTableRecordsCompletedEventHandler(object sender, QueryTableRecordsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryTableRecordsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryTableRecordsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void QueryRelatedTableRecordsCompletedEventHandler(object sender, QueryRelatedTableRecordsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryRelatedTableRecordsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryRelatedTableRecordsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void QuerySingleRecordCompletedEventHandler(object sender, QuerySingleRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QuerySingleRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QuerySingleRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void QueryTableSearchHintCompletedEventHandler(object sender, QueryTableSearchHintCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryTableSearchHintCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryTableSearchHintCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void UpdateRecordCompletedEventHandler(object sender, UpdateRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void CreateRecordCompletedEventHandler(object sender, CreateRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void CreateMultipleRecordsCompletedEventHandler(object sender, CreateMultipleRecordsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateMultipleRecordsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateMultipleRecordsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void DeleteRecordCompletedEventHandler(object sender, DeleteRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void TriggerWorkflowCompletedEventHandler(object sender, TriggerWorkflowCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TriggerWorkflowCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TriggerWorkflowCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void UploadImageCompletedEventHandler(object sender, UploadImageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void DownloadImageCompletedEventHandler(object sender, DownloadImageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DownloadImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DownloadImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetInformationContentCompletedEventHandler(object sender, GetInformationContentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInformationContentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInformationContentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void SetRecordStatusCompletedEventHandler(object sender, SetRecordStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetRecordStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetRecordStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void AddListMembersCompletedEventHandler(object sender, AddListMembersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddListMembersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddListMembersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void RemoveListMembersCompletedEventHandler(object sender, RemoveListMembersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveListMembersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveListMembersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void QueryPicklistOptionsCompletedEventHandler(object sender, QueryPicklistOptionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryPicklistOptionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryPicklistOptionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void SetRecordsRelationCompletedEventHandler(object sender, SetRecordsRelationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetRecordsRelationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetRecordsRelationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void RemoveRecordsRelationCompletedEventHandler(object sender, RemoveRecordsRelationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveRecordsRelationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveRecordsRelationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void RetrieveMultipleRecordsCompletedEventHandler(object sender, RetrieveMultipleRecordsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveMultipleRecordsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveMultipleRecordsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591