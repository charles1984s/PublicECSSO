//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:4.0.30319.42000
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace ECSSO.Ldap {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://ws.direk.com", ConfigurationName="Ldap.ILdapServicePortType")]
    public interface ILdapServicePortType {
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        string getAttr2(string in0, string in1, string in2, string in3);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        string verifySessionId(string in0);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        System.Nullable<bool> authUser3(string in0, string in1, string in2);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        string authUser4(string in0, string in1, string in2, string in3);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        System.Nullable<bool> verifyUserName(string in0);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        string verifySessionIdReturnAttr(string in0, string in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        string adminGetAttr(string in0, string in1, string in2, string in3, string in4);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        System.Nullable<bool> authUser(string in0, string in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        byte[] getFile();
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        void sessionRefresh(string in0);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        string Auth(string in0, string in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        string authUser2(string in0, string in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        string getAttr(string in0, string in1, string in2);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILdapServicePortTypeChannel : ECSSO.Ldap.ILdapServicePortType, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LdapServicePortTypeClient : System.ServiceModel.ClientBase<ECSSO.Ldap.ILdapServicePortType>, ECSSO.Ldap.ILdapServicePortType {
        
        public LdapServicePortTypeClient() {
        }
        
        public LdapServicePortTypeClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LdapServicePortTypeClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LdapServicePortTypeClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LdapServicePortTypeClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string getAttr2(string in0, string in1, string in2, string in3) {
            return base.Channel.getAttr2(in0, in1, in2, in3);
        }
        
        public string verifySessionId(string in0) {
            return base.Channel.verifySessionId(in0);
        }
        
        public System.Nullable<bool> authUser3(string in0, string in1, string in2) {
            return base.Channel.authUser3(in0, in1, in2);
        }
        
        public string authUser4(string in0, string in1, string in2, string in3) {
            return base.Channel.authUser4(in0, in1, in2, in3);
        }
        
        public System.Nullable<bool> verifyUserName(string in0) {
            return base.Channel.verifyUserName(in0);
        }
        
        public string verifySessionIdReturnAttr(string in0, string in1) {
            return base.Channel.verifySessionIdReturnAttr(in0, in1);
        }
        
        public string adminGetAttr(string in0, string in1, string in2, string in3, string in4) {
            return base.Channel.adminGetAttr(in0, in1, in2, in3, in4);
        }
        
        public System.Nullable<bool> authUser(string in0, string in1) {
            return base.Channel.authUser(in0, in1);
        }
        
        public byte[] getFile() {
            return base.Channel.getFile();
        }
        
        public void sessionRefresh(string in0) {
            base.Channel.sessionRefresh(in0);
        }
        
        public string Auth(string in0, string in1) {
            return base.Channel.Auth(in0, in1);
        }
        
        public string authUser2(string in0, string in1) {
            return base.Channel.authUser2(in0, in1);
        }
        
        public string getAttr(string in0, string in1, string in2) {
            return base.Channel.getAttr(in0, in1, in2);
        }
    }
}
